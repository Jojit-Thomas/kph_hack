// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  email      String   @unique
  password   String
  isVerified Boolean  @default(false)
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  stores     Store[]

  @@map("users")
}

model Store {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  description String
  handle      String
  ownerId     String   @db.ObjectId
  owner       User     @relation(fields: [ownerId], references: [id])
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  products    Product[]
  
  @@map("stores")
}


model Product {
  id          String        @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  description String
  price       Float
  storeId     String        @db.ObjectId
  store       Store         @relation(fields: [storeId], references: [id])
  images      ProductImage[]
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt

  @@map("products")
}

model ProductImage {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  url       String
  position  Int
  productId String   @db.ObjectId
  product   Product  @relation(fields: [productId], references: [id], onDelete: Cascade)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("product_images")
}